name: CMake with MSVC
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # ----------------------------------------------
    # Cache vcpkg and Installed Dependencies
    # ----------------------------------------------
    - name: Cache vcpkg and installed dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/vcpkg
          C:/Users/runneradmin/AppData/Local/vcpkg/archives
        key: vcpkg-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          vcpkg-${{ runner.os }}-

    # ----------------------------------------------
    # Install vcpkg and Dependencies (if not cached)
    # ----------------------------------------------
    - name: Install vcpkg and dependencies
      shell: cmd
      run: |
        if not exist vcpkg (
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg && bootstrap-vcpkg.bat
        )
        set PATH=%VCPKG_ROOT%;%PATH%
        vcpkg install freeimage openblas fftw3 --triplet x64-windows

    # Debug vcpkg cache
    - name: Debug vcpkg cache
      shell: cmd
      run: |
        dir C:\Users\runneradmin\AppData\Local\vcpkg\archives

    # ----------------------------------------------
    # Cache ArrayFire Build
    # ----------------------------------------------
    - name: Cache ArrayFire build
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/arrayfire/build
        key: arrayfire-${{ runner.os }}-${{ hashFiles('arrayfire/CMakeLists.txt') }}
        restore-keys: |
          arrayfire-${{ runner.os }}-

    # ----------------------------------------------
    # Build ArrayFire (if not cached)
    # ----------------------------------------------
    - name: Build ArrayFire
      shell: cmd
      run: |
        if not exist arrayfire (
          git clone https://github.com/arrayfire/arrayfire.git
        )
        cd arrayfire
        if not exist build mkdir build
        cd build
        cmake -G "Visual Studio 17 2022" -A x64 ^
          -DCMAKE_TOOLCHAIN_FILE="%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake" ..
        cmake --build . --config Release --parallel 4
        cmake --install .

    # Debug ArrayFire cache
    - name: Debug ArrayFire cache
      shell: cmd
      run: |
        dir /s arrayfire\build

    # ----------------------------------------------
    # Build Latern-lib
    # ----------------------------------------------
    - name: Build Latern-lib
      shell: cmd
      run: |
        if not exist build mkdir build
        cd build
        cmake -G "Visual Studio 17 2022" -A x64 ^
          -DCMAKE_TOOLCHAIN_FILE="%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake" ..
        cmake --build . --config Release --parallel 4
